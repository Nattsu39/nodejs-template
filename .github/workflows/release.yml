name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  # @see https://stackoverflow.com/a/72959712/8179249
  check-current-branch:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.check_step.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get current branch
        id: check_step
        # 1. Get the list of branches ref where this tag exists
        # 2. Remove 'origin/' from that result
        # 3. Put that string in output
        # => We can now use function 'contains(list, item)''
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch="$(echo ${raw//origin\//} | tr -d '\n')"
          echo "{name}=branch" >> $GITHUB_OUTPUT
          echo "Branches where this tag exists : $branch."

  build-and-push-image:
    runs-on: ubuntu-latest
    # Wait for check step to finish
    outputs:
      tag_name: ${{ steps.extract_tag.outputs.tag_name }}
    needs: check-current-branch
    # only run if tag is present on branch 'main'
    if: contains(${{ needs.check-current-branch.outputs.branch }}, 'main')`
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Extract tag_ref
        id: extract_tag
        run: |
          echo "tag_name=${${{github.ref}}##*/}" >> $GITHUB_OUTPUT

      - run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      
      - run: npx changelogithub --output CHANGELOG.md
      
      - uses: EndBug/add-and-commit@v7
        with:
          add: CHANGELOG.md
          default_author: github_actions
          message: 'üê≥ chore(release): Update Changelog ${{ steps.extract_tag.outputs.tag_name }}'
      
      - name: Cache
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
              **/node_modules
          key: ${{runner.OS}}-${{hashFiles('**/package-lock.json')}}

      - name: Installing Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: npm install

      - name: Running Build
        run: npm run build

      #- name: Running Test
      #  run: npm run test-unit

      - name: Running Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}